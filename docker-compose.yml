services:
  # PostgreSQL with TimescaleDB extension
  postgres:
    image: timescale/timescaledb:latest-pg15
    container_name: atm_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-atm_insights}
      POSTGRES_HOST_AUTH_METHOD: trust
      TIMESCALEDB_TELEMETRY: "off"
    command: |
      postgres 
      -c shared_preload_libraries=timescaledb 
      -c max_connections=200 
      -c shared_buffers=256MB 
      -c effective_cache_size=1GB 
      -c work_mem=4MB 
      -c maintenance_work_mem=64MB
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-timescale.sql:/docker-entrypoint-initdb.d/init-timescale.sql
    networks:
      - atm_network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-atm_insights}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for pub/sub and caching
  redis:
    image: redis:7-alpine
    container_name: atm_redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis}
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - atm_network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # FastAPI Backend
  backend:
    image: backend:latest
    container_name: backend
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${API_PORT:-8000}:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - atm_network
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    depends_on:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: ${ADMIN_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${ADMIN_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - atm_network

volumes:
  postgres_data:
  redis_data:
  pgadmin_data:

networks:
  atm_network:
    driver: bridge
